input = '''#.....#.........#.........................#...#....................#......#.......#...........#........#..........................
..................#......#..................................#..................#....#...............#.#....................#.....#
..............#...........#......#.#.......................................#..................#......#............................
##...............................#..........#...................#.......#................................................#........
#.....................#.......##................#...#..........#............................................#...#....#............
........#........#.............#...............#...##...................#...........#...........#.......#...........##.#...#.#....
................................................#....................................................#.#..........................
.........#....#.....................................................................##......#.....#........#...............#......
.............................#.....#.........#......................#...#................#.#..........#...........................
........................................#.........................................................................#...............
.........................................#.......#.............#.#.........................#....#.....#...........#...............
...#............##...................................#...........#........................................#..................#....
....#.................#.......#............#.....#...........#................................#.#.#...........................#...
...#................................................................#.......................#.#........................#..#...#...
............................#......#.......#...............................................................................#....#.
.......................................................#.............................#...#.......#.............#............#.....
.....................................................................#......................................#.................##..
......#.................#......................................................#................#.................................
...............................................................................#...............#............................#.....
........................................................#......................##..................#........#.....................
.#.................................#....#........#..#........#.................................#...............#..........#.#.....
.................#................#...................#.#.....#................#..................#.........#.....................
...............#........................................................................#............#..........#.................
....................#..................#...........#................................#.....................#...#......#............
.............#..#..................................#..............................#...............................#...#......#...#
..................#.............................................................#...............................#......#..........
................................................................#....#..............#.............................#...............
.............#............#............................#...#........#...#.........................##..............................
....................................#....#.............#...#....#..........................#..................#.#............#....
.......................#........................................................................................#.................
........#..................................#..#.........#.......................................#......#..............#...........
..........#............#............#..................#.......#..........#...................................#...........#.......
....#..............................#.....#...........##...#.....................#...........................#..........#..........
................................#..#.................................................................#...#...................#....
..#....................#..........................................................................#...............................
..................#........................#.......#..#......................................................................#....
.#.....#......................#.....................................#.........................................#...................
..#....#...........................................#..........................................................................#...
..#.....#........................................................................#........#.#.............................#.......
................#......................................#...............#....................................#..........#..........
....................................#........................##.............................#..........................#........#.
.#..............#..............................#......................................................#...........................
...#.#......................#.................#..................................#...........................#....................
..#....#..........................................#...#.......#..............................................#....................
.......#.................#............................#..................................................#..#....................#
.....##.#...........#...........................................#.....................................................#...........
................#.#........................................................................#..........#..#....#.##................
..........#........#............................................#.#......................................#.............#..........
............................................................#..........................................#..........................
.......#........#.................#....................................................................#..........................
........................................................#..........................#..............#...............................
.............#.#....................................#.................##............#.#.............................#..........#..
.##.............................................^........#...................#.....#...................................#..........
...............#..#..#................................................................#...........................#...............
.#.......##...........#.........#..................#......#..........#...#....#...................#...............................
....#................................................................#...................#........................................
.........#............#..#......................................................#..#..............................................
...#.............................................................#......#....#....................................#...#....#......
.....#.........#.................#....................#..................#..#.#.............#......#.....................#........
...........#.......#.##.#......#..#.............................#...........#..............................................#......
................................................................................................#.#......#......................#.
##..................................##....#.................#...............##....................................................
.....#.............................#.............................................#................#.....................#.........
............#..............................#.....................#...............#..#....#....#...................................
.........#.........................#...#................................................#........................................#
.#..........................................#.......#.....................................................#..............#...#....
#.........#...........#.............#..........................#........................................#.........................
.......................................................................#.............................................#............
....#..............#..#......................................................#..........................................#....#....
........#...................................#...#................#.........................................................#...#..
.........................................................#..#..#..#..........#...........#...........#............#...............
..............................................##......#.................#..............................................#..........
.............................#..........#......#.....#....#.............#..............................................#...#..#...
......................................##......#.....................................#.......#....................#................
...................................................................................................#..............................
.................................#..................................................................................#.............
........#...................................................................#...................##............#...................
...............................#..................................................................................................
...............................#...........................................................#...............##..............#......
........................................................................#..........#..................................#...........
................#.................................................................................................................
...#.................#..........#...........#...................................#......................#..........................
.......................#..........................................................#.............#.............#..........#........
..........#..........#.#.................................#........#.............#..#..........................#........#.........#
.................#.........#.#........................#...#.............................................................#......#..
......#.....................................................................#.....#...............#...............#....#..........
......#...##....#..#.......................................##......#......#....#..............#............#....................#.
.#..........#........#...#........##..............#....#...........................#.....#................#...................#...
.........................#........................................................................................................
..........................#.......................#.........#................................................#.#...........#......
......#...#.....#..........#....................#..................................#...#.................................#........
.......................................................#............................#.....................#.#.................#...
..............#...............#......................#......#...................#.....................#.........#................#
....#.........#...............................................................#.......#.......#...........#.................#.....
.......................#.........................#....................................#...........................................
...............#.................#..........#........................#...##.......................................................
....##..................#..#..................................................................................#.................#.
..................#.............#......................#...............#................#.#.......................................
........................#....#................................................#...#..........#....#.......#.......................
.........................................................#..............#.............#.#.......#..................#......#...#...
...........#...........................#.........#..................................#.....................................#.......
.#..........................................#................................................................#...........#........
..................................##....................#..........#..............#..........#............#.....#.................
##..#..#....#.........................................................#...............#...................................#.......
....#.#...........#............................#....#........#......#.............................................................
#....#.........................#.............#.............................................................#.....#..#.............
............................#......#................#...............................................#.....#............#..........
........................#.............#..................#........................................................................
..#.............#........................................#.................................................#......................
...................#...................#..........#..#.............................................#...........#...#............#.
....#...#..........................##...#...............#....#.....................................#............#.................
..............................#..............................................................###..................................
.................#......................................#.......................##.#............#.................................
............#.........................................#......##.....................#............#................................
....................#..#.............................#...#......................................#....................#.#........#.
....#...........#...........................................#....................................................#................
............#.....#..................................##.........#........#.....................................#..................
......#..............#..................................#...#.......#.............................................................
..........#.................#.......#.........................................................................#...........#.......
...........#..............#................#.....##.#............#........#.......................................................
................#.......................#.........................................................................#...........#...
..............................#............................................#.......#..............................................
..............#..............................#......#..................#....#.....#.................................#........#....
....................##..........#...#..#................#............#.......................#.................................#..
........................##.......#..................#.......#.....................#................#.....................#.....#..
..............#.............#...#......#.........#.................##..#...........#...........#.........................##.......
#........#...........#........#..#............#...........#....#....#......##..............................................#......
........................................#.....................#....................................#........#......#......#.......
.............#........#.............#...........#..#..#.......................................................#......#............
#...................#.#........................................#..................................#...#...........................'''

example_input = '''....#.....
.........#
..........
..#.......
.......#..
..........
.#..^.....
........#.
#.........
......#...'''

test_input = '''##########
.........#
..........
..........
..........
..........
....^.....
..........
..........
##########'''


def build_map(input):
    map = []
    guard_position = (-1, -1)
    lines = input.split('\n')
    y = 0
    for line in lines:
        row = []
        x = 0
        for cell in line:
            if cell == '^':
                row.append(0)
                guard_position = (x, y)
            elif cell == '#':
                row.append(1)
            else:
                row.append(0)
            x += 1
        map.append(row)
        y += 1

    return map, guard_position

# 0 = NORTH (0, -1)
# 1 = EAST (1, 0)
# 2 = SOUTH (0, 1)
# 3 = WEST (-1, 0)
def move(guard_position, guard_direction, map, turns, loop_locations, trial_branch=False):
    if guard_direction == 0:  # north
        return move_north(guard_position, map, turns, loop_locations, trial_branch)
    elif guard_direction == 1:  # east
        return move_east(guard_position, map, turns, loop_locations, trial_branch)
    elif guard_direction == 2:  # south
        return move_south(guard_position, map, turns, loop_locations, trial_branch)
    else:  # west
        return move_west(guard_position, map, turns, loop_locations, trial_branch)
    
def next_position(position, direction):
    if direction == 0:
        return (position[0] + 0, position[1] - 1)
    elif direction == 1:
        return (position[0] + 1, position[1] + 0)
    elif direction == 2:
        return (position[0] + 0, position[1] + 1)
    else:
        return (position[0] - 1, position[1] + 0)
    
    
def move_north(guard_position, map, turns, loop_locations, trial_branch):
    x, cury = guard_position
    nexty = cury - 1
    while nexty >= 0:
        if map[nexty][x] == 1:
            return (x, cury)
        else:
            if not trial_branch:
                test_for_loop((x, cury), 0, map, turns, loop_locations)
            cury = nexty
            nexty = cury - 1

    return None
def move_east(guard_position, map, turns, loop_locations, trial_branch):
    curx, y = guard_position
    nextx = curx + 1
    width = len(map[0])
    while nextx < width:
        if map[y][nextx] == 1:
            return (curx, y)
        else:
            if not trial_branch:
                test_for_loop((curx, y), 1, map, turns, loop_locations)
            curx = nextx
            nextx = curx + 1

    return None

def move_south(guard_position, map, turns, loop_locations, trial_branch):
    x, cury = guard_position
    nexty = cury + 1
    height = len(map)
    while nexty < height:
        if map[nexty][x] == 1:
            return (x, cury)
        else:
            if not trial_branch:
                test_for_loop((x, cury), 2, map, turns, loop_locations)
            cury = nexty
            nexty = cury + 1

    return None

def move_west(guard_position, map, turns, loop_locations, trial_branch):
    curx, y = guard_position
    nextx = curx - 1
    while nextx >= 0:
        if map[y][nextx] == 1:
            return (curx, y)
        else:
            if not trial_branch:
                test_for_loop((curx, y), 3, map, turns, loop_locations)
            curx = nextx
            nextx = curx - 1

    return None

def test_for_loop(position, direction, map, turns, loop_locations):
    obstacle_location = next_position(position, direction)
    if obstacle_location in loop_locations:
        return
    trial_map = map.copy()
    trial_map[obstacle_location[1]][obstacle_location[0]] = 1
    trial_turns = []
    trial_turns.append((position, direction))
    direction = (direction + 1) % 4
    position = run_to_end(position, direction, trial_map, trial_turns, True)
    if position == None:
        # moved off the edge
        pass
    else:
        loop_locations.append(obstacle_location)


def count_guard_path_positions(guard_path):
    count = 0
    for row in guard_path:
        for i in range(len(row)):
            count += row[i]
    return count

def run_to_end(guard_position, guard_direction, map, turns, trial_branch):
    loop_locations = []
    while guard_position != None:
        guard_position = move(guard_position, guard_direction, map, turns, loop_locations, trial_branch)
        if guard_position != None:
            if (guard_position, guard_direction) in turns:
                # found a loop
                break
            turns.append((guard_position, guard_direction))
        guard_direction = (guard_direction + 1) % 4

    return guard_position


def makes_loop(map, travel, obstacle):
    # note: should check validity of obstacle position before calling this function
    map[obstacle[1]][obstacle[0]] = 1
    result = is_loop(map, travel)
    map[obstacle[1]][obstacle[0]] = 0
    return result


def is_loop(map, travel):
    turns = []
    while True:
        # print(travel)
        next = next_travel_position(travel)
        if is_off_map(map, next):
            # print('off map')
            return False
        elif is_obstacle(map, next):
            # print('obstacle')
            if travel in turns:
                return True
            else:
                # print('new turn')
                turns.append(travel)
                travel = turn(travel)
        else:
            travel = step(travel)
    

def is_obstacle(map, pos):
    return map[pos[1]][pos[0]] == 1


def is_off_map(map, pos):
    return pos[0] < 0 or pos[1] < 0 or pos[0] >= len(map[0]) or pos[1] >= len(map)


def turn(travel):
    return travel[0], travel[1], (travel[2] + 1) % 4


def step(travel):
    dir = travel[2]
    if dir == 0:
        return travel[0], travel[1] - 1, dir
    elif dir == 1:
        return travel[0] + 1, travel[1], dir
    elif dir == 2:
        return travel[0], travel[1] + 1, dir
    else:
        return travel[0] - 1, travel[1], dir
    

def next_travel_position(travel):
    t = step(travel)
    return (t[0], t[1])


map, guard_position = build_map(input)
guard_direction = 0

loop_locations = []

travel = guard_position[0], guard_position[1], guard_direction
for y in range(len(map)):
    for x in range(len(map[0])):
        pos = (x, y)
        # print(pos)
        if is_obstacle(map, pos):
            # print('already obstacle')
            continue

        if pos in loop_locations:
            # print('already added')
            continue

        if guard_position == pos:
            # print('guard position')
            continue

        if makes_loop(map, travel, pos):
            loop_locations.append(pos)

print(len(loop_locations))

# part 1 answer = 4758